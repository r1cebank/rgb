use crate::cpu::instruction::{
    AddressSource, AddressTarget, ArithmeticSource, ArithmeticTarget, IncDecOperationType,
    IncDecTarget, Instruction, JumpCondition, JumpSource, LoadSource, LoadTarget, LoadType,
    OperationType,
};

/// SM83 non prefixed instruction map
///
pub static INSTRUCTION_MAP: [[Instruction; 0x10]; 0x10] = [
    // 0
    [
        Instruction::NOP,
        Instruction::LD(LoadType::ToRegister(LoadTarget::BC, LoadSource::D16)),
        Instruction::LD(LoadType::ToAddress(AddressTarget::BC, LoadSource::A)),
        Instruction::INC(IncDecOperationType::ToRegister(IncDecTarget::BC)),
        Instruction::INC(IncDecOperationType::ToRegister(IncDecTarget::B)),
        Instruction::DEC(IncDecOperationType::ToRegister(IncDecTarget::B)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::B, LoadSource::D8)),
        Instruction::RLCA,
        Instruction::LD(LoadType::ToAddress(AddressTarget::A16, LoadSource::SP)),
        Instruction::ADD(OperationType::ToRegister(
            ArithmeticTarget::HL,
            ArithmeticSource::BC,
        )),
        Instruction::LD(LoadType::FromAddress(LoadTarget::A, AddressSource::BC)),
        Instruction::DEC(IncDecOperationType::ToRegister(IncDecTarget::BC)),
        Instruction::INC(IncDecOperationType::ToRegister(IncDecTarget::C)),
        Instruction::DEC(IncDecOperationType::ToRegister(IncDecTarget::C)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::C, LoadSource::D8)),
        Instruction::RRCA,
    ],
    // 1
    [
        Instruction::STOP,
        Instruction::LD(LoadType::ToRegister(LoadTarget::DE, LoadSource::D16)),
        Instruction::LD(LoadType::ToAddress(AddressTarget::DE, LoadSource::A)),
        Instruction::INC(IncDecOperationType::ToRegister(IncDecTarget::DE)),
        Instruction::INC(IncDecOperationType::ToRegister(IncDecTarget::D)),
        Instruction::DEC(IncDecOperationType::ToRegister(IncDecTarget::D)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::D, LoadSource::D8)),
        Instruction::RLA,
        Instruction::JR(JumpCondition::Always, JumpSource::R8),
        Instruction::ADD(OperationType::ToRegister(
            ArithmeticTarget::HL,
            ArithmeticSource::DE,
        )),
        Instruction::LD(LoadType::FromAddress(LoadTarget::A, AddressSource::DE)),
        Instruction::DEC(IncDecOperationType::ToRegister(IncDecTarget::DE)),
        Instruction::INC(IncDecOperationType::ToRegister(IncDecTarget::E)),
        Instruction::DEC(IncDecOperationType::ToRegister(IncDecTarget::E)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::E, LoadSource::D8)),
        Instruction::RRA,
    ],
    // 2
    [
        Instruction::JR(JumpCondition::NotZero, JumpSource::R8),
        Instruction::LD(LoadType::ToRegister(LoadTarget::HL, LoadSource::D16)),
        Instruction::LD(LoadType::ToAddress(AddressTarget::HLP, LoadSource::A)),
        Instruction::INC(IncDecOperationType::ToRegister(IncDecTarget::HL)),
        Instruction::INC(IncDecOperationType::ToRegister(IncDecTarget::H)),
        Instruction::DEC(IncDecOperationType::ToRegister(IncDecTarget::H)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::H, LoadSource::D8)),
        Instruction::DAA,
        Instruction::JR(JumpCondition::Zero, JumpSource::R8),
        Instruction::ADD(OperationType::ToRegister(
            ArithmeticTarget::HL,
            ArithmeticSource::HL,
        )),
        Instruction::LD(LoadType::FromAddress(LoadTarget::A, AddressSource::HLP)),
        Instruction::DEC(IncDecOperationType::ToRegister(IncDecTarget::HL)),
        Instruction::INC(IncDecOperationType::ToRegister(IncDecTarget::L)),
        Instruction::DEC(IncDecOperationType::ToRegister(IncDecTarget::L)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::L, LoadSource::D8)),
        Instruction::CPL,
    ],
    // 3
    [
        Instruction::JR(JumpCondition::NotCarry, JumpSource::R8),
        Instruction::LD(LoadType::ToRegister(LoadTarget::SP, LoadSource::D16)),
        Instruction::LD(LoadType::ToAddress(AddressTarget::HLM, LoadSource::A)),
        Instruction::INC(IncDecOperationType::ToRegister(IncDecTarget::SP)),
        Instruction::INC(IncDecOperationType::ToAddress(IncDecTarget::HL)),
        Instruction::DEC(IncDecOperationType::ToAddress(IncDecTarget::HL)),
        Instruction::LD(LoadType::ToAddress(AddressTarget::HL, LoadSource::D8)),
        Instruction::SCF,
        Instruction::JR(JumpCondition::Carry, JumpSource::R8),
        Instruction::ADD(OperationType::ToRegister(
            ArithmeticTarget::HL,
            ArithmeticSource::SP,
        )),
        Instruction::LD(LoadType::FromAddress(LoadTarget::A, AddressSource::HLM)),
        Instruction::DEC(IncDecOperationType::ToRegister(IncDecTarget::SP)),
        Instruction::INC(IncDecOperationType::ToRegister(IncDecTarget::A)),
        Instruction::DEC(IncDecOperationType::ToRegister(IncDecTarget::A)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::A, LoadSource::D8)),
        Instruction::CCF,
    ],
    // 4
    [
        Instruction::LD(LoadType::ToRegister(LoadTarget::B, LoadSource::B)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::B, LoadSource::C)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::B, LoadSource::D)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::B, LoadSource::E)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::B, LoadSource::H)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::B, LoadSource::L)),
        Instruction::LD(LoadType::FromAddress(LoadTarget::B, AddressSource::HL)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::B, LoadSource::A)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::C, LoadSource::B)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::C, LoadSource::C)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::C, LoadSource::D)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::C, LoadSource::E)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::C, LoadSource::H)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::C, LoadSource::L)),
        Instruction::LD(LoadType::FromAddress(LoadTarget::C, AddressSource::HL)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::C, LoadSource::A)),
    ],
    // 5
    [
        Instruction::LD(LoadType::ToRegister(LoadTarget::D, LoadSource::B)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::D, LoadSource::C)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::D, LoadSource::D)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::D, LoadSource::E)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::D, LoadSource::H)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::D, LoadSource::L)),
        Instruction::LD(LoadType::FromAddress(LoadTarget::D, AddressSource::HL)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::D, LoadSource::A)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::E, LoadSource::B)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::E, LoadSource::C)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::E, LoadSource::D)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::E, LoadSource::E)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::E, LoadSource::H)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::E, LoadSource::L)),
        Instruction::LD(LoadType::FromAddress(LoadTarget::E, AddressSource::HL)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::E, LoadSource::A)),
    ],
    // 6
    [
        Instruction::LD(LoadType::ToRegister(LoadTarget::H, LoadSource::B)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::H, LoadSource::C)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::H, LoadSource::D)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::H, LoadSource::E)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::H, LoadSource::H)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::H, LoadSource::L)),
        Instruction::LD(LoadType::FromAddress(LoadTarget::H, AddressSource::HL)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::H, LoadSource::A)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::L, LoadSource::B)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::L, LoadSource::C)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::L, LoadSource::D)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::L, LoadSource::E)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::L, LoadSource::H)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::L, LoadSource::L)),
        Instruction::LD(LoadType::FromAddress(LoadTarget::L, AddressSource::HL)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::L, LoadSource::A)),
    ],
    // 7
    [
        Instruction::LD(LoadType::ToAddress(AddressTarget::HL, LoadSource::B)),
        Instruction::LD(LoadType::ToAddress(AddressTarget::HL, LoadSource::C)),
        Instruction::LD(LoadType::ToAddress(AddressTarget::HL, LoadSource::D)),
        Instruction::LD(LoadType::ToAddress(AddressTarget::HL, LoadSource::E)),
        Instruction::LD(LoadType::ToAddress(AddressTarget::HL, LoadSource::H)),
        Instruction::LD(LoadType::ToAddress(AddressTarget::HL, LoadSource::L)),
        Instruction::HALT,
        Instruction::LD(LoadType::ToAddress(AddressTarget::HL, LoadSource::A)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::A, LoadSource::B)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::A, LoadSource::C)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::A, LoadSource::D)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::A, LoadSource::E)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::A, LoadSource::H)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::A, LoadSource::L)),
        Instruction::LD(LoadType::FromAddress(LoadTarget::A, AddressSource::HL)),
        Instruction::LD(LoadType::ToRegister(LoadTarget::A, LoadSource::A)),
    ],
    // 8
    [
        Instruction::ADD(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::B,
        )),
        Instruction::ADD(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::C,
        )),
        Instruction::ADD(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::D,
        )),
        Instruction::ADD(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::E,
        )),
        Instruction::ADD(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::H,
        )),
        Instruction::ADD(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::L,
        )),
        Instruction::ADD(OperationType::FromAddress(
            ArithmeticTarget::A,
            ArithmeticSource::HL,
        )),
        Instruction::ADD(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::A,
        )),
        Instruction::ADC(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::B,
        )),
        Instruction::ADC(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::C,
        )),
        Instruction::ADC(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::D,
        )),
        Instruction::ADC(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::E,
        )),
        Instruction::ADC(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::H,
        )),
        Instruction::ADC(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::L,
        )),
        Instruction::ADC(OperationType::FromAddress(
            ArithmeticTarget::A,
            ArithmeticSource::HL,
        )),
        Instruction::ADC(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::A,
        )),
    ],
    // 9
    [
        Instruction::SUB(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::B,
        )),
        Instruction::SUB(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::C,
        )),
        Instruction::SUB(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::D,
        )),
        Instruction::SUB(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::E,
        )),
        Instruction::SUB(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::H,
        )),
        Instruction::SUB(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::L,
        )),
        Instruction::SUB(OperationType::FromAddress(
            ArithmeticTarget::A,
            ArithmeticSource::HL,
        )),
        Instruction::SUB(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::A,
        )),
        Instruction::SBC(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::B,
        )),
        Instruction::SBC(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::C,
        )),
        Instruction::SBC(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::D,
        )),
        Instruction::SBC(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::E,
        )),
        Instruction::SBC(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::H,
        )),
        Instruction::SBC(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::L,
        )),
        Instruction::SBC(OperationType::FromAddress(
            ArithmeticTarget::A,
            ArithmeticSource::HL,
        )),
        Instruction::SBC(OperationType::ToRegister(
            ArithmeticTarget::A,
            ArithmeticSource::A,
        )),
    ],
    // a
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // b
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // c
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // d
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // e
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // f
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
];

/// SM83 prefixed instruction map
///
pub static PREFIX_INSTRUCTION_MAP: [[Instruction; 0x10]; 0x10] = [
    // 0
    [
        Instruction::NOP,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // 1
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // 2
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // 3
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // 4
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // 5
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // 6
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // 7
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // 8
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // 9
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // a
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // b
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // c
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // d
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // e
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
    // f
    [
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
        Instruction::NAI,
    ],
];
